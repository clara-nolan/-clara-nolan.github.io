{"ast":null,"code":"import Node from '../core/Node.js';\nimport PropertyNode from '../core/PropertyNode.js';\nimport ContextNode from '../core/ContextNode.js';\n\nclass CondNode extends Node {\n  constructor(node, ifNode, elseNode) {\n    super();\n    this.node = node;\n    this.ifNode = ifNode;\n    this.elseNode = elseNode;\n  }\n\n  getNodeType(builder) {\n    const ifType = this.ifNode.getNodeType(builder);\n    const elseType = this.elseNode.getNodeType(builder);\n\n    if (builder.getTypeLength(elseType) > builder.getTypeLength(ifType)) {\n      return elseType;\n    }\n\n    return ifType;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const context = {\n      temp: false\n    };\n    const nodeProperty = new PropertyNode(null, type).build(builder);\n    const nodeSnippet = new ContextNode(this.node\n    /*, context*/\n    ).build(builder, 'bool'),\n          ifSnippet = new ContextNode(this.ifNode, context).build(builder, type),\n          elseSnippet = new ContextNode(this.elseNode, context).build(builder, type);\n    builder.addFlowCode(`if ( ${nodeSnippet} ) {\n\n\\t\\t${nodeProperty} = ${ifSnippet};\n\n\\t} else {\n\n\\t\\t${nodeProperty} = ${elseSnippet};\n\n\\t}`);\n    return nodeProperty;\n  }\n\n}\n\nexport default CondNode;","map":null,"metadata":{},"sourceType":"module"}