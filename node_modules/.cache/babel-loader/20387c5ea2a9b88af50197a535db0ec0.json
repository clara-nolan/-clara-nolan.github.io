{"ast":null,"code":"import { Loader } from 'three';\nimport { GLTFLoader } from './GLTFLoader.js'; //\n// VRM is based on glTF 2.0 and VRM extension is defined\n// in top-level json.extensions.VRM\n\nclass VRMLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.gltfLoader = new GLTFLoader(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    this.gltfLoader.load(url, function (gltf) {\n      try {\n        scope.parse(gltf, onLoad);\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  setDRACOLoader(dracoLoader) {\n    this.gltfLoader.setDRACOLoader(dracoLoader);\n    return this;\n  }\n\n  parse(gltf, onLoad) {\n    // const gltfParser = gltf.parser;\n    // const gltfExtensions = gltf.userData.gltfExtensions || {};\n    // const vrmExtension = gltfExtensions.VRM || {};\n    // handle VRM Extension here\n    onLoad(gltf);\n  }\n\n}\n\nexport { VRMLoader };","map":null,"metadata":{},"sourceType":"module"}