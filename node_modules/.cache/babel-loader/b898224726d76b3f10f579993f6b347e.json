{"ast":null,"code":"import { useEffect, useMemo, useState } from \"react\";\n/**\n * useMediaMatch\n *\n * A react hook that signals whether or not a media query is matched.\n *\n * @param query The media query to signal on. Example, `\"print\"` will signal\n * `true` when previewing in print mode, and `false` otherwise.\n * @returns Whether or not the media query is currently matched.\n */\n\nfunction useMediaMatch(query) {\n  if (typeof window === \"undefined\") {\n    console.warn(\"useMediaMatch cannot function as window is undefined.\");\n    return false;\n  }\n\n  var matchMedia = useMemo(function () {\n    return window.matchMedia(query);\n  }, [query]);\n\n  var _a = useState(function () {\n    return matchMedia.matches;\n  }),\n      matches = _a[0],\n      setMatches = _a[1];\n\n  useEffect(function () {\n    setMatches(matchMedia.matches);\n\n    var listener = function (event_) {\n      return setMatches(event_.matches);\n    };\n\n    if (matchMedia.addEventListener) {\n      matchMedia.addEventListener(\"change\", listener);\n      return function () {\n        return matchMedia.removeEventListener(\"change\", listener);\n      };\n    } else {\n      matchMedia.addListener(listener);\n      return function () {\n        return matchMedia.removeListener(listener);\n      };\n    }\n  }, [matchMedia]);\n  return matches;\n}\n\nexport { useMediaMatch };","map":null,"metadata":{},"sourceType":"module"}