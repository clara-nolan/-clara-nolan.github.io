{"ast":null,"code":"/* eslint-disable id-length */\n\n/**\n *  Inspired from https://github.com/Swizec/useDimensions\n *\n */\nimport { useState, useCallback, useLayoutEffect } from \"react\";\nimport { useOnWindowResize } from \"./useOnWindowResize\";\nimport { useOnWindowScroll } from \"./useOnWindowScroll\";\n\nvar getDimensionObject = function (node) {\n  var rect = node.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width,\n    x: rect.left,\n    y: rect.top\n  };\n};\n\nvar noWindowReturnValue = [undefined, null, null];\nexport var useDimensionsRef = function (_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.updateOnScroll,\n      updateOnScroll = _c === void 0 ? true : _c,\n      _d = _b.updateOnResize,\n      updateOnResize = _d === void 0 ? true : _d;\n\n  var _e = useState(null),\n      dimensions = _e[0],\n      setDimensions = _e[1];\n\n  var _f = useState(null),\n      node = _f[0],\n      setNode = _f[1];\n\n  var ref = useCallback(function (nodeFromCallback) {\n    setNode(nodeFromCallback);\n  }, []);\n  var measure = useCallback(function () {\n    window.requestAnimationFrame(function () {\n      if (node) {\n        setDimensions(getDimensionObject(node));\n      }\n    });\n  }, [node]);\n  useLayoutEffect(function () {\n    measure();\n  }, [measure]);\n  useOnWindowResize(function () {\n    measure();\n  }, updateOnResize, true);\n  useOnWindowScroll(function () {\n    measure();\n  }, updateOnScroll, true);\n\n  if (typeof window === \"undefined\") {\n    console.warn(\"useDimensionsRef: window is undefined.\");\n    return noWindowReturnValue;\n  }\n\n  return [ref, dimensions, node];\n};","map":null,"metadata":{},"sourceType":"module"}