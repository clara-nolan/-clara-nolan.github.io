{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\clara\\\\Documents\\\\personalSite\\\\clara-nolan.github.io\\\\src\\\\mainScene\\\\Camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { PerspectiveCamera } from '@react-three/drei';\nimport { useFrame } from '@react-three/fiber';\nimport useStore from '../context/mainStore';\nimport * as THREE from 'three';\n\nconst MainCamera = () => {\n  _s();\n\n  const camref = useRef();\n  const {\n    setCameraRef,\n    floatingCamera\n  } = useStore(state => state);\n  useEffect(() => {\n    if (camref) {\n      setCameraRef(camref.current);\n    }\n  }, [camref, setCameraRef]);\n  useEffect(() => {\n    camref.current.fov = floatingCamera ? 100 : 65;\n    camref.current.updateProjectionMatrix();\n  }, [floatingCamera]);\n  useFrame(() => {\n    if (camref.current && floatingCamera) {\n      const target = new THREE.Vector3(0, 0, 0);\n      camref.current.translateOnAxis(camref.current.worldToLocal(target), 0.1); // camref.current.lookAt(target);\n    }\n  });\n  return /*#__PURE__*/React.createElement(PerspectiveCamera, {\n    ref: camref,\n    makeDefault: true,\n    fov: 65,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(MainCamera, \"WpvSsYjBofThi7Y1cE5YZ2XIaWM=\", false, function () {\n  return [useStore, useFrame];\n});\n\n_c = MainCamera;\nexport default MainCamera;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainCamera\");","map":{"version":3,"names":["React","useEffect","useRef","PerspectiveCamera","useFrame","useStore","THREE","MainCamera","camref","setCameraRef","floatingCamera","state","current","fov","updateProjectionMatrix","target","Vector3","translateOnAxis","worldToLocal"],"sources":["C:/Users/clara/Documents/personalSite/clara-nolan.github.io/src/mainScene/Camera.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { PerspectiveCamera } from '@react-three/drei';\r\nimport { useFrame } from '@react-three/fiber';\r\n\r\nimport useStore from '../context/mainStore';\r\nimport * as THREE from 'three';\r\n\r\nconst MainCamera = () => {\r\n  const camref = useRef();\r\n  const { setCameraRef, floatingCamera } = useStore((state) => state);\r\n\r\n  useEffect(() => {\r\n    if (camref) {\r\n      setCameraRef(camref.current);\r\n    }\r\n  }, [camref, setCameraRef]);\r\n\r\n  useEffect(() => {\r\n    camref.current.fov = floatingCamera ? 100 : 65;\r\n    camref.current.updateProjectionMatrix();\r\n  }, [floatingCamera]);\r\n\r\n  useFrame(() => {\r\n    if (camref.current && floatingCamera) {\r\n      const target = new THREE.Vector3(0, 0, 0);\r\n      camref.current.translateOnAxis(camref.current.worldToLocal(target), 0.1);\r\n      // camref.current.lookAt(target);\r\n    }\r\n  });\r\n\r\n  return <PerspectiveCamera ref={camref} makeDefault fov={65} />;\r\n};\r\n\r\nexport default MainCamera;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAMC,MAAM,GAAGN,MAAM,EAArB;EACA,MAAM;IAAEO,YAAF;IAAgBC;EAAhB,IAAmCL,QAAQ,CAAEM,KAAD,IAAWA,KAAZ,CAAjD;EAEAV,SAAS,CAAC,MAAM;IACd,IAAIO,MAAJ,EAAY;MACVC,YAAY,CAACD,MAAM,CAACI,OAAR,CAAZ;IACD;EACF,CAJQ,EAIN,CAACJ,MAAD,EAASC,YAAT,CAJM,CAAT;EAMAR,SAAS,CAAC,MAAM;IACdO,MAAM,CAACI,OAAP,CAAeC,GAAf,GAAqBH,cAAc,GAAG,GAAH,GAAS,EAA5C;IACAF,MAAM,CAACI,OAAP,CAAeE,sBAAf;EACD,CAHQ,EAGN,CAACJ,cAAD,CAHM,CAAT;EAKAN,QAAQ,CAAC,MAAM;IACb,IAAII,MAAM,CAACI,OAAP,IAAkBF,cAAtB,EAAsC;MACpC,MAAMK,MAAM,GAAG,IAAIT,KAAK,CAACU,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAf;MACAR,MAAM,CAACI,OAAP,CAAeK,eAAf,CAA+BT,MAAM,CAACI,OAAP,CAAeM,YAAf,CAA4BH,MAA5B,CAA/B,EAAoE,GAApE,EAFoC,CAGpC;IACD;EACF,CANO,CAAR;EAQA,oBAAO,oBAAC,iBAAD;IAAmB,GAAG,EAAEP,MAAxB;IAAgC,WAAW,MAA3C;IAA4C,GAAG,EAAE,EAAjD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;AACD,CAxBD;;GAAMD,U;UAEqCF,Q,EAazCD,Q;;;KAfIG,U;AA0BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}