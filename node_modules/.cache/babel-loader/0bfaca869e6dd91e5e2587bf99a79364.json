{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nvar defaultOptions = {};\n/**\n *\n * useInput Hook\n *\n * Handles an input's value and onChange props internally to\n * make text input creation process easier\n *\n * @param {unknown} [initialValue] Initial value of the input\n * @param {Options} [options] Options object\n * @returns {InputHandler} Input handler with value and onChange\n */\n\nfunction useInput(initialValue, options) {\n  if (initialValue === void 0) {\n    initialValue = \"\";\n  }\n\n  if (options === void 0) {\n    options = defaultOptions;\n  }\n\n  var _a = useState(initialValue),\n      value = _a[0],\n      setValue = _a[1];\n\n  var onChange = useCallback(function (event) {\n    var newValue = event.target.value;\n    var shouldUpdate = true;\n\n    if (typeof options.validate === \"function\") {\n      shouldUpdate = options.validate(newValue, value);\n    }\n\n    if (shouldUpdate) {\n      setValue(newValue);\n    }\n  }, [options, value]); // sync with default value\n\n  useEffect(function () {\n    setValue(initialValue);\n  }, [initialValue]);\n  var handler = {\n    onChange: onChange,\n    value: value\n  };\n  return handler;\n}\n\nexport { useInput };","map":null,"metadata":{},"sourceType":"module"}