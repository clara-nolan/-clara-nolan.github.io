{"ast":null,"code":"import { Vector2, Vector3, Vector4, Color, Matrix3, Matrix4 } from 'three';\n\nclass WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    this.name = name;\n    this.value = value;\n    this.boundary = 0; // used to build the uniform buffer according to the STD140 layout\n\n    this.itemSize = 0;\n    this.offset = 0; // this property is set by WebGPUUniformsGroup and marks the start position in the uniform buffer\n  }\n\n  setValue(value) {\n    this.value = value;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n}\n\nclass FloatUniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    super(name, value);\n    this.boundary = 4;\n    this.itemSize = 1;\n    Object.defineProperty(this, 'isFloatUniform', {\n      value: true\n    });\n  }\n\n}\n\nclass Vector2Uniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    super(name, value);\n    this.boundary = 8;\n    this.itemSize = 2;\n    Object.defineProperty(this, 'isVector2Uniform', {\n      value: true\n    });\n  }\n\n}\n\nclass Vector3Uniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    super(name, value);\n    this.boundary = 16;\n    this.itemSize = 3;\n    Object.defineProperty(this, 'isVector3Uniform', {\n      value: true\n    });\n  }\n\n}\n\nclass Vector4Uniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector4();\n    super(name, value);\n    this.boundary = 16;\n    this.itemSize = 4;\n    Object.defineProperty(this, 'isVector4Uniform', {\n      value: true\n    });\n  }\n\n}\n\nclass ColorUniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Color();\n    super(name, value);\n    this.boundary = 16;\n    this.itemSize = 3;\n    Object.defineProperty(this, 'isColorUniform', {\n      value: true\n    });\n  }\n\n}\n\nclass Matrix3Uniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Matrix3();\n    super(name, value);\n    this.boundary = 48;\n    this.itemSize = 12;\n    Object.defineProperty(this, 'isMatrix3Uniform', {\n      value: true\n    });\n  }\n\n}\n\nclass Matrix4Uniform extends WebGPUUniform {\n  constructor(name) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Matrix4();\n    super(name, value);\n    this.boundary = 64;\n    this.itemSize = 16;\n    Object.defineProperty(this, 'isMatrix4Uniform', {\n      value: true\n    });\n  }\n\n}\n\nexport { ColorUniform, FloatUniform, Matrix3Uniform, Matrix4Uniform, Vector2Uniform, Vector3Uniform, Vector4Uniform };","map":null,"metadata":{},"sourceType":"module"}