{"ast":null,"code":"import debounce from \"lodash.debounce\";\nimport { useRef, useEffect, useCallback } from \"react\";\n/**\n * Debounce hook\n * Debounces a function\n *\n * @param callback The callback to debounce\n * @param wait The duration to debounce\n * @param options The options object.\n * @param options.leading Specify invoking on the leading edge of the timeout.\n * @param options.maxWait The maximum time func is allowed to be delayed before itâ€™s invoked.\n * @param options.trailing Specify invoking on the trailing edge of the timeout.\n * @returns Returns the new debounced function.\n */\n\nfunction useDebounce(callback, wait, options) {\n  var createDebouncedCallback = useCallback(function (function_) {\n    return debounce(function_, wait, options);\n  }, [wait, options]);\n  var debouncedCallbackRef = useRef(createDebouncedCallback(callback));\n  useEffect(function () {\n    debouncedCallbackRef.current = createDebouncedCallback(callback);\n  }, [callback, createDebouncedCallback]);\n  return debouncedCallbackRef.current;\n}\n\nexport { useDebounce };","map":null,"metadata":{},"sourceType":"module"}