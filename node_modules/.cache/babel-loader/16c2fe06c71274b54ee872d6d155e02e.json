{"ast":null,"code":"import Node from './Node.js';\n\nclass ContextNode extends Node {\n  constructor(node) {\n    let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this.node = node;\n    this.context = context;\n  }\n\n  getNodeType(builder) {\n    return this.node.getNodeType(builder);\n  }\n\n  generate(builder, output) {\n    const previousContext = builder.getContext();\n    builder.setContext(Object.assign({}, builder.context, this.context));\n    const snippet = this.node.build(builder, output);\n    builder.setContext(previousContext);\n    return snippet;\n  }\n\n}\n\nContextNode.prototype.isContextNode = true;\nexport default ContextNode;","map":null,"metadata":{},"sourceType":"module"}