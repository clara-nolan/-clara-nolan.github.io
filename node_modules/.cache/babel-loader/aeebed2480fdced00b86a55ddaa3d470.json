{"ast":null,"code":"import Node from './Node.js';\n\nclass CodeNode extends Node {\n  constructor() {\n    let code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'code';\n    super(nodeType);\n    this.code = code;\n    this._includes = [];\n  }\n\n  setIncludes(includes) {\n    this._includes = includes;\n    return this;\n  }\n\n  getIncludes() {\n    return this._includes;\n  }\n\n  generate(builder) {\n    const includes = this.getIncludes(builder);\n\n    for (const include of includes) {\n      include.build(builder);\n    }\n\n    const nodeCode = builder.getCodeFromNode(this, this.getNodeType(builder));\n    nodeCode.code = this.code;\n    return nodeCode.code;\n  }\n\n}\n\nCodeNode.prototype.isCodeNode = true;\nexport default CodeNode;","map":null,"metadata":{},"sourceType":"module"}