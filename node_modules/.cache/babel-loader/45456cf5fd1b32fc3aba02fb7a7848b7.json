{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\n/**\n * Wraps children in a billboarded group. Sample usage:\n *\n * ```js\n * <Billboard>\n *   <Text>hi</Text>\n * </Billboard>\n * ```\n */\n\nconst Billboard = /*#__PURE__*/React.forwardRef(function Billboard(_ref, ref) {\n  let {\n    follow = true,\n    lockX = false,\n    lockY = false,\n    lockZ = false,\n    ...props\n  } = _ref;\n  const localRef = React.useRef();\n  useFrame(_ref2 => {\n    let {\n      camera\n    } = _ref2;\n    if (!follow || !localRef.current) return; // save previous rotation in case we're locking an axis\n\n    const prevRotation = localRef.current.rotation.clone(); // always face the camera\n\n    localRef.current.quaternion.copy(camera.quaternion); // readjust any axis that is locked\n\n    if (lockX) localRef.current.rotation.x = prevRotation.x;\n    if (lockY) localRef.current.rotation.y = prevRotation.y;\n    if (lockZ) localRef.current.rotation.z = prevRotation.z;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: mergeRefs([localRef, ref])\n  }, props));\n});\nexport { Billboard };","map":null,"metadata":{},"sourceType":"module"}