{"ast":null,"code":"import { useEffect, useState } from \"react\";\nvar initialMouseState = {\n  clientX: null,\n  clientY: null,\n  movementX: null,\n  movementY: null,\n  offsetX: null,\n  offsetY: null,\n  pageX: null,\n  pageY: null,\n  screenX: null,\n  screenY: null,\n  x: null,\n  y: null\n};\n\nfunction getMousePositionFromEvent(e) {\n  var screenX = e.screenX,\n      screenY = e.screenY,\n      movementX = e.movementX,\n      movementY = e.movementY,\n      pageX = e.pageX,\n      pageY = e.pageY,\n      clientX = e.clientX,\n      clientY = e.clientY,\n      offsetX = e.offsetX,\n      offsetY = e.offsetY;\n  return {\n    clientX: clientX,\n    clientY: clientY,\n    movementX: movementX,\n    movementY: movementY,\n    offsetX: offsetX,\n    offsetY: offsetY,\n    pageX: pageX,\n    pageY: pageY,\n    screenX: screenX,\n    screenY: screenY,\n    x: screenX,\n    y: screenY\n  };\n}\n/**\n * useMouse hook\n *\n * Retrieves current mouse position and information about the position like\n * screenX, pageX, clientX, movementX, offsetX\n */\n\n\nexport function useMouse() {\n  var _a = useState(initialMouseState),\n      mousePosition = _a[0],\n      setMousePostition = _a[1];\n\n  function updateMousePosition(e) {\n    setMousePostition(getMousePositionFromEvent(e));\n  }\n\n  useEffect(function () {\n    document.addEventListener(\"mousemove\", updateMousePosition);\n    return function () {\n      document.removeEventListener(\"mousemove\", updateMousePosition);\n    };\n  }, []);\n  return mousePosition;\n}","map":null,"metadata":{},"sourceType":"module"}