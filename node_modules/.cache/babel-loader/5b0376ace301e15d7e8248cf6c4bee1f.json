{"ast":null,"code":"import { useGlobalObjectEventListener } from \"./useGlobalObjectEventListener\";\n/**\n *  useWindowEventListener hook\n *\n *  A react hook to an event listener to the window\n *\n * @param {string} eventName The event to track\n * @param {Function} callback The callback to be called on event\n * @param {ListenerOptions} listenerOptions The options to be passed to the event listener\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n * @returns {undefined}\n */\n\nfunction useWindowEventListener(eventName, callback, listenerOptions, isLayoutEffect) {\n  if (listenerOptions === void 0) {\n    listenerOptions = {};\n  }\n\n  if (isLayoutEffect === void 0) {\n    isLayoutEffect = false;\n  }\n\n  useGlobalObjectEventListener(window, eventName, callback, listenerOptions, true, isLayoutEffect);\n}\n\nexport { useWindowEventListener };","map":null,"metadata":{},"sourceType":"module"}