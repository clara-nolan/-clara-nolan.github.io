{"ast":null,"code":"import { useState } from \"react\";\nimport { useOnWindowResize } from \"./useOnWindowResize\";\nimport { useOnWindowScroll } from \"./useOnWindowScroll\";\n\nfunction computeScrollPosition() {\n  if (typeof window === \"undefined\") {\n    return {\n      scrollX: 0,\n      scrollY: 0\n    };\n  } else {\n    return {\n      scrollX: window.scrollX || window.pageXOffset,\n      scrollY: window.scrollY || window.pageYOffset\n    };\n  }\n}\n/**\n *\n * useWindowScrollPosition hook\n * A React hook to get the scroll position of the window\n *\n * @returns an object containing scrollX and scrollY values\n */\n\n\nfunction useWindowScrollPosition() {\n  var _a = useState(computeScrollPosition),\n      scrollPosition = _a[0],\n      setScrollPosition = _a[1];\n  /**\n   * Recalculate on scroll\n   */\n\n\n  useOnWindowScroll(function () {\n    setScrollPosition(computeScrollPosition());\n  }, true, true);\n  /**\n   * Recalculate on resize\n   */\n\n  useOnWindowResize(function () {\n    setScrollPosition(computeScrollPosition());\n  }, true, true);\n  return scrollPosition;\n}\n\nexport { useWindowScrollPosition };","map":null,"metadata":{},"sourceType":"module"}