{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nclass NormalNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NormalNode.LOCAL;\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `normal-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n\n    if (scope === NormalNode.GEOMETRY) {\n      outputNode = new AttributeNode('normal', 'vec3');\n    } else if (scope === NormalNode.LOCAL) {\n      outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n    } else if (scope === NormalNode.VIEW) {\n      const vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    } else if (scope === NormalNode.WORLD) {\n      // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n      const vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n\n_defineProperty(NormalNode, \"WORLD\", 'world');\n\n_defineProperty(NormalNode, \"VIEW\", 'view');\n\nexport default NormalNode;","map":null,"metadata":{},"sourceType":"module"}