{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nfunction Mask(_ref) {\n  let {\n    id = 1,\n    children,\n    colorWrite = false,\n    depthWrite = false,\n    ...props\n  } = _ref;\n  const spread = React.useMemo(() => ({\n    colorWrite,\n    depthWrite,\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: THREE.AlwaysStencilFunc,\n    stencilFail: THREE.ReplaceStencilOp,\n    stencilZFail: THREE.ReplaceStencilOp,\n    stencilZPass: THREE.ReplaceStencilOp\n  }), [id, colorWrite, depthWrite]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: -id\n  }, props), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", spread), typeof children === 'function' ? children(spread) : children);\n}\n\nfunction useMask(id) {\n  let inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: inverse ? THREE.NotEqualStencilFunc : THREE.EqualStencilFunc,\n    stencilFail: THREE.KeepStencilOp,\n    stencilZFail: THREE.KeepStencilOp,\n    stencilZPass: THREE.KeepStencilOp\n  };\n}\n\nexport { Mask, useMask };","map":null,"metadata":{},"sourceType":"module"}