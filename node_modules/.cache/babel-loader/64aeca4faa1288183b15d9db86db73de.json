{"ast":null,"code":"import { useState } from \"react\";\nimport { useIsomorphicEffect } from \"./useIsomorphicEffect\";\nvar nullDimensions = {\n  innerHeight: null,\n  innerWidth: null,\n  outerHeight: null,\n  outerWidth: null\n};\n\nfunction getDimensions() {\n  return {\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n    outerHeight: window.outerHeight,\n    outerWidth: window.outerWidth\n  };\n}\n/**\n * useWindowSize hook\n * A hook that provides information of the dimensions of the window\n *\n * @returns Dimensions of the window\n */\n\n\nexport function useWindowSize() {\n  var _a = useState(function () {\n    if (typeof window === \"undefined\") {\n      return nullDimensions;\n    } else {\n      return getDimensions();\n    }\n  }),\n      windowSize = _a[0],\n      setWindowSize = _a[1];\n\n  function onResize() {\n    setWindowSize(getDimensions());\n  } // set resize handler once on mount and clean before unmount\n\n\n  useIsomorphicEffect(function () {\n    if (typeof window === \"undefined\") {\n      return function () {};\n    } else {\n      window.addEventListener(\"resize\", onResize);\n      return function () {\n        window.removeEventListener(\"resize\", onResize);\n      };\n    }\n  }, []);\n  return windowSize;\n}","map":null,"metadata":{},"sourceType":"module"}