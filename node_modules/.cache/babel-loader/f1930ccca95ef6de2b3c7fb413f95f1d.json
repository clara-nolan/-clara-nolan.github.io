{"ast":null,"code":"import Node from '../core/Node.js';\nimport UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\n\nclass ReferenceNode extends Node {\n  constructor(property, uniformType) {\n    let object = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super();\n    this.property = property;\n    this.uniformType = uniformType;\n    this.object = object;\n    this.node = null;\n    this.updateType = NodeUpdateType.Object;\n    this.setNodeType(uniformType);\n  }\n\n  setNodeType(uniformType) {\n    this.node = new UniformNode(null, uniformType);\n    this.nodeType = uniformType;\n\n    if (uniformType === 'color') {\n      this.nodeType = 'vec3';\n    } else if (uniformType === 'texture') {\n      this.nodeType = 'vec4';\n    }\n  }\n\n  getNodeType() {\n    return this.uniformType;\n  }\n\n  update(frame) {\n    const object = this.object !== null ? this.object : frame.object;\n    const value = object[this.property];\n    this.node.value = value;\n  }\n\n  generate(builder) {\n    return this.node.build(builder, this.getNodeType(builder));\n  }\n\n}\n\nexport default ReferenceNode;","map":null,"metadata":{},"sourceType":"module"}