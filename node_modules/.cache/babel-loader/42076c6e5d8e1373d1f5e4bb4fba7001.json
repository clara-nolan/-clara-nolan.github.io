{"ast":null,"code":"import { useGlobalObjectEventListener } from \"./useGlobalObjectEventListener\";\n/**\n *\n * useOnWindowScroll hook\n * Fires a callback when window scroll\n *\n * @param {Function} callback Callback to be called before unmount\n * @param {boolean} when When the handler should be applied\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\n */\n\nfunction useOnWindowScroll(callback, when, isLayoutEffect) {\n  if (when === void 0) {\n    when = true;\n  }\n\n  if (isLayoutEffect === void 0) {\n    isLayoutEffect = false;\n  }\n\n  if (typeof window !== \"undefined\") {\n    useGlobalObjectEventListener(window, \"scroll\", callback, {\n      passive: true\n    }, when, isLayoutEffect);\n  } else {\n    console.warn(\"useOnWindowScroll can't attach an event listener as window is undefined.\");\n  }\n}\n\nexport { useOnWindowScroll };","map":null,"metadata":{},"sourceType":"module"}