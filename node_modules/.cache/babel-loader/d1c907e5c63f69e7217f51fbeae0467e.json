{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\n\nclass PositionNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : PositionNode.LOCAL;\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `position-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n\n    if (scope === PositionNode.GEOMETRY) {\n      outputNode = new AttributeNode('position', 'vec3');\n    } else if (scope === PositionNode.LOCAL) {\n      outputNode = new VaryNode(new PositionNode(PositionNode.GEOMETRY));\n    } else if (scope === PositionNode.WORLD) {\n      const vertexPositionNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new ModelNode(ModelNode.WORLD_MATRIX), new PositionNode(PositionNode.LOCAL));\n      outputNode = new VaryNode(vertexPositionNode);\n    } else if (scope === PositionNode.VIEW) {\n      const vertexPositionNode = new OperatorNode('*', new ModelNode(ModelNode.VIEW_MATRIX), new PositionNode(PositionNode.LOCAL));\n      outputNode = new VaryNode(vertexPositionNode);\n    } else if (scope === PositionNode.VIEW_DIRECTION) {\n      const vertexPositionNode = new MathNode(MathNode.NEGATE, new PositionNode(PositionNode.VIEW));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexPositionNode));\n    }\n\n    return outputNode.build(builder, this.getNodeType(builder));\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(PositionNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(PositionNode, \"LOCAL\", 'local');\n\n_defineProperty(PositionNode, \"WORLD\", 'world');\n\n_defineProperty(PositionNode, \"VIEW\", 'view');\n\n_defineProperty(PositionNode, \"VIEW_DIRECTION\", 'viewDirection');\n\nexport default PositionNode;","map":null,"metadata":{},"sourceType":"module"}