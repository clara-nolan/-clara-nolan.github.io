{"ast":null,"code":"import { NumberKeyframeTrack, AnimationClip, Vector3, VectorKeyframeTrack, BooleanKeyframeTrack, ColorKeyframeTrack } from 'three';\n\nconst AnimationClipCreator = () => {};\n\nAnimationClipCreator.CreateRotationAnimation = (period, axis) => {\n  const times = [0, period],\n        values = [0, 360];\n  axis = axis || 'x';\n  const trackName = `.rotation[${axis}]`;\n  const track = new NumberKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, period, [track]);\n};\n\nAnimationClipCreator.CreateScaleAxisAnimation = (period, axis) => {\n  const times = [0, period],\n        values = [0, 1];\n  axis = axis || 'x';\n  const trackName = `.scale[${axis}]`;\n  const track = new NumberKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, period, [track]);\n};\n\nAnimationClipCreator.CreateShakeAnimation = (duration, shakeScale) => {\n  const times = [],\n        values = [],\n        tmp = new Vector3();\n\n  for (let i = 0; i < duration * 10; i++) {\n    times.push(i / 10);\n    tmp.set(Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0, Math.random() * 2.0 - 1.0).multiply(shakeScale).toArray(values, values.length);\n  }\n\n  const trackName = '.position';\n  const track = new VectorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreatePulsationAnimation = (duration, pulseScale) => {\n  const times = [],\n        values = [],\n        tmp = new Vector3();\n\n  for (let i = 0; i < duration * 10; i++) {\n    times.push(i / 10);\n    const scaleFactor = Math.random() * pulseScale;\n    tmp.set(scaleFactor, scaleFactor, scaleFactor).toArray(values, values.length);\n  }\n\n  const trackName = '.scale';\n  const track = new VectorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreateVisibilityAnimation = duration => {\n  const times = [0, duration / 2, duration],\n        values = [true, false, true];\n  const trackName = '.visible';\n  const track = new BooleanKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nAnimationClipCreator.CreateMaterialColorAnimation = (duration, colors) => {\n  const times = [],\n        values = [],\n        timeStep = duration / colors.length;\n\n  for (let i = 0; i <= colors.length; i++) {\n    times.push(i * timeStep);\n    values.push(colors[i % colors.length]);\n  }\n\n  const trackName = '.material[0].color';\n  const track = new ColorKeyframeTrack(trackName, times, values);\n  return new AnimationClip(null, duration, [track]);\n};\n\nexport { AnimationClipCreator };","map":null,"metadata":{},"sourceType":"module"}